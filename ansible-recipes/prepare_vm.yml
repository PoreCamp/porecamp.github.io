### tested with ansible 2.3.1 and ubuntu 16.04 cloud image on CLIMB

---

- hosts: all
  remote_user: ubuntu
  become: yes
  gather_facts: false

  tasks:
  - name: install python2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

  - name: get hostname
    command: /bin/hostname
    register: vhostname

  - name: fix /etc/hosts
    lineinfile:
      path: /etc/hosts
      regexp: '^127\.0\.0\.1'
      line: "127.0.0.1 localhost {{ vhostname.stdout }}"
      owner: root
      group: root
      mode: 0644

  - name: install packages
    apt: name={{ item }} state=installed
    with_items:
    - python-pip
    - r-base-core
    - git
    - python-setuptools
    - python-dev
    - cython
    - libhdf5-serial-dev
    - libfreetype6-dev
    - python-matplotlib
    - bwa
    - python-biopython
    - default-jre
    - gnuplot-x11
    - bioperl
    - python3-venv
    - python3-dev
    - prodigal
    - artemis
    - last-align
    - seqtk
    - libssl-dev
    - python3-pip
    - hdf5-tools
    - texlive
    - texlive-latex-extra

  - name: install R packages
    shell: R -e "install.packages(c('ggplot2','shiny','svDialogs','data.table','bit64','scales','gridExtra','reshape'),repos='https://cloud.r-project.org/')"

  - name: install biocLite
    shell: R -e 'source("http://www.bioconductor.org/biocLite.R"); biocLite("rhdf5")'
  
  - name: install h5py
    pip: name=h5py

  - name: install biopython
    pip: name=biopython

  - name: git poretools
    git: repo=https://github.com/arq5x/poretools dest=/tmp/poretools

  - name: install poretools
    command: python setup.py install
    args:
      chdir: /tmp/poretools

  - name: git porechop
    git: repo=https://github.com/rrwick/Porechop.git dest=/tmp/porechop

  - name: install porechop
    command: python3 setup.py install
    args:
      chdir: /tmp/porechop

  - name: grab samtools
    get_url: url=https://github.com/samtools/samtools/releases/download/1.4.1/samtools-1.4.1.tar.bz2 dest=/tmp/samtools.tar.bz2

  - name: extract samtools
    unarchive: src=/tmp/samtools.tar.bz2 dest=/tmp/ copy=no

  - name: install samtools
    command: make install
    args:
      chdir: /tmp/samtools-1.4.1

  - name: grab bcftools
    get_url: url=https://github.com/samtools/bcftools/releases/download/1.4.1/bcftools-1.4.1.tar.bz2 dest=/tmp/bcftools.tar.bz2

  - name: extract bcftools
    unarchive: src=/tmp/bcftools.tar.bz2 dest=/tmp/ copy=no

  - name: install bcftools
    command: make install
    args:
      chdir: /tmp/bcftools-1.4.1

  - name: git graphmap
    git: repo=https://github.com/isovic/graphmap.git dest=/tmp/graphmap

  - name: make graphmap modules
    command: make modules
    args:
      chdir: /tmp/graphmap

  - name: make graphmap 
    command: make
    args:
      chdir: /tmp/graphmap

  - name: copy graphmap
    copy: src=/tmp/graphmap/bin/Linux-x64/graphmap dest=/usr/local/bin/graphmap remote_src=true mode=0755

  - name: git nanopolish
    git: repo=https://github.com/jts/nanopolish.git dest=/tmp/nanopolish recursive=yes

  - name: make nanopolish
    command: make
    args:
      chdir: /tmp/nanopolish

  - name: copy nanopolish
    copy: src=/tmp/nanopolish/nanopolish dest=/usr/local/bin/nanopolish remote_src=true mode=0755

  - name: grab canu
    get_url: url=https://github.com/marbl/canu/releases/download/v1.5/canu-1.5.Linux-amd64.tar.xz dest=/tmp/canu-1.5.Linux-amd64.tar.xz

  - name: extract canu
    unarchive: src=/tmp/canu-1.5.Linux-amd64.tar.xz dest=/usr/local/ copy=no

  - name: grab spades
    get_url: url=http://cab.spbu.ru/files/release3.10.1/SPAdes-3.10.1-Linux.tar.gz dest=/tmp/SPAdes-3.10.1-Linux.tar.gz

  - name: extract spades
    unarchive: src=/tmp/SPAdes-3.10.1-Linux.tar.gz dest=/usr/local/ copy=no

  - name: grab centrifuge
    get_url: url=ftp://ftp.ccb.jhu.edu/pub/infphilo/centrifuge/downloads/centrifuge-1.0.3-beta-Linux_x86_64.zip dest=/tmp/centrifuge-1.0.3-beta-Linux_x86_64.zip

  - name: extract centrifuge
    unarchive: src=/tmp/centrifuge-1.0.3-beta-Linux_x86_64.zip dest=/usr/local/ copy=no

  - name: grab kraken
    get_url: url=https://ccb.jhu.edu/software/kraken/dl/kraken-0.10.5-beta.tgz dest=/tmp/kraken-0.10.5-beta.tgz

  - name: exctact kraken
    unarchive: src=/tmp/kraken-0.10.5-beta.tgz dest=/tmp copy=no
    
  - name: install kraken
    command: ./install_kraken.sh /usr/local/kraken
    args:
      chdir: /tmp/kraken-0.10.5-beta/

  - name: grab kraken db
    get_url: url=https://ccb.jhu.edu/software/kraken/dl/minikraken.tgz dest=/tmp/minikraken.tgz

  - name: exctract kraken db
    unarchive: src=/tmp/minikraken.tgz dest=/usr/local/ copy=no

  - name: set KRAKEN_DB_PATH
    copy:
      content: "export KRAKEN_DEFAULT_DB=/usr/local/minikraken_20141208"
      dest: /etc/profile.d/krakendb.sh
      mode: 0755
      force: yes

  - name: add stuff to PATH
    lineinfile:
      dest=/etc/environment
      state=present
      backrefs=yes
      regexp='PATH=(["]*)((?!.*?{{item}}).*?)(["]*)$'
      line="PATH=\1\2:{{item}}\3"
    with_items:
    - /usr/local/canu-1.5/Linux-amd64/bin
    - /usr/local/SPAdes-3.10.1-Linux/bin
    - /usr/local/centrifuge-1.0.3-beta
    - /usr/local/kraken
    - /usr/local/NanoOK/bin

  - name: install virtualenv
    pip: name=virtualenv

  - name: install pip
    pip: name=pip virtualenv=~/sourmash.py3 virtualenv_python=python3.5
    become: no

  - name: install cython, jupyter etc...
    pip: name={{ item }} virtualenv=~/sourmash.py3 virtualenv_python=python3.5
    with_items:
    - Cython
    - jupyter
    - jupyter_client
    - ipython
    - pandas
    - matplotlib
    - scipy
    - scikit-learn
    - khmer
    - https://github.com/dib-lab/sourmash/archive/master.zip
    become: no

  - name: git racon
    git: repo=https://github.com/isovic/racon.git dest=/tmp/racon force=yes

  - name: make racon modules
    command: make modules
    args:
      chdir: /tmp/racon

  - name: make racon tools
    command: make tools
    args:
      chdir: /tmp/racon

  - name: make racon
    command: make
    args:
      chdir: /tmp/racon

  - name: copy racon
    copy: src=/tmp/racon/bin/racon dest=/usr/local/bin/racon force=yes remote_src=true mode=0755

  - name: git minimap
    git: repo=https://github.com/lh3/minimap dest=/tmp/minimap force=yes

  - name: make minimap
    command: make 
    args:
      chdir: /tmp/minimap

  - name: copy minimap
    copy: src=/tmp/minimap/minimap dest=/usr/local/bin/minimap force=yes remote_src=true mode=0755

  - name: git miniasm
    git: repo=https://github.com/lh3/miniasm dest=/tmp/miniasm force=yes

  - name: make miniasm
    command: make 
    args:
      chdir: /tmp/miniasm

  - name: copy miniasm
    copy: src=/tmp/miniasm/miniasm dest=/usr/local/bin/miniasm force=yes remote_src=true mode=0755

  - name: grab jellyfish
    get_url: url=http://www.cbcb.umd.edu/software/jellyfish/jellyfish-1.1.11.tar.gz dest=/tmp/jellyfish-1.1.11.tar.gz

  - name: extract jellyfish
    unarchive: src=/tmp/jellyfish-1.1.11.tar.gz dest=/tmp/ copy=no

  - name: configure jellyfish
    command: "./configure"
    args:
      chdir: /tmp/jellyfish-1.1.11

  - name: make install jellyfish
    command: make install
    args:
      chdir: /tmp/jellyfish-1.1.11

  - name: add /usr/local/lib to ld.so.conf
    copy:
      content: "/usr/local/lib"
      dest: /etc/ld.so.conf.d/usrlocallib.conf
      mode: 0644 
    register: ldsoconfupdated

  - name: run ldconfig
    command: /sbin/ldconfig
    when: ldsoconfupdated.changed

  - name: install ncbi-genome-download
    pip: name=ncbi-genome-download

  - name: add nanopore key
    apt_key: url=https://mirror.oxfordnanoportal.com/apt/ont-repo.pub state=present

  - name: add nanopore repo
    apt_repository:
      repo: deb http://mirror.oxfordnanoportal.com/apt trusty-stable non-free
      state: present
      filename: nanoporetech

  - name: install python3-ont-fast5-api
    apt: name=python3-ont-fast5-api state=installed allow_unauthenticated=yes

  - name: install python3-ont-albacore
    apt: deb=https://mirror.oxfordnanoportal.com/software/analysis/python3-ont-albacore_1.2.3-1~xenial_all.deb allow_unauthenticated=yes

  - name: install ont-albacore wheel
    pip: name=https://mirror.oxfordnanoportal.com/software/analysis/ont_albacore-1.2.3-cp35-cp35m-manylinux1_x86_64.whl executable=pip3

  - name: grab centrifuge-kreport
    get_url: url=https://raw.githubusercontent.com/PoreCamp/porecamp.github.io/master/texas/ansible/centrifuge-kreport dest=/usr/local/bin/centrifuge-kreport mode=0755 

  - name: grab poRe
    get_url: url='https://downloads.sourceforge.net/project/rpore/0.24/poRe_0.24.tar.gz?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Frpore%2F&ts=1498651612&use_mirror=10gbps-io' dest=/tmp/poRe_0.24.tar.gz

  - name: install poRe
    shell: R CMD INSTALL /tmp/poRe_0.24.tar.gz

  - name: git nanook
    git: repo=https://github.com/TGAC/NanoOK.git  dest=/usr/local/NanoOK/

  - name: set NANOOK_DIR
    copy:
      content: "export NANOOK_DIR=/usr/local/NanoOK"
      dest: /etc/profile.d/nanook.sh
      mode: 0755

  - name: grab ngmlr
    unarchive: src=https://github.com/philres/ngmlr/releases/download/v0.2.5/ngmlr-0.2.5-beta-linux-x86_64.tar.gz dest=/tmp remote_src=yes

  - name: copy ngmlr
    copy: src=/tmp/ngmlr-0.2.5/ngmlr dest=/usr/local/bin/ngmlr remote_src=true mode=0755
